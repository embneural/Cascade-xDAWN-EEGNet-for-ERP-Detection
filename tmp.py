#%%
import numpy as np

Model_list = {
#Traditional Algorithms
'ESVMs':{
    
        'II-A': np.array([17, 34, 55, 64, 69, 80, 74, 79, 85, 89, 92, 94, 96, 98, 99]),
        'II-B': np.array([42, 62, 70, 71, 80, 83, 87, 90, 94, 95, 95, 97, 96, 96, 97]),
        'IIb':  np.array([25, 29, 28, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]),
},

#Deep Learning Algorithms

'CNN-1':{
        'II-A': np.array([16, 33, 47, 52, 61, 65, 77, 78, 85, 86, 90, 91, 91, 93, 97]),
        'II-B': np.array([35, 52, 59, 68, 79, 81, 82, 89, 92, 91, 91, 90, 91, 92, 92]),
},

'MCNN-1':{
        'II-A': np.array([18, 31, 50, 54, 61, 68, 76, 76, 79, 82, 89, 92, 91, 93, 97]),
        'II-B': np.array([39, 55, 62, 64, 77, 79, 86, 92, 91, 92, 95, 95, 95, 94, 94]),
},


'OLCNN': {
        'II-A': np.array([23, 39, 56, 63, 73, 79, 82, 85, 90, 91, 94, 95, 95, 96, 99]), 
        'II-B': np.array([46, 62, 72, 79, 84, 87, 89, 93, 94, 96, 97, 97, 97, 98, 98]),
        'IIb':  np.array([24, 28, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]), # original is in percent
},

'BN3': {
        'II-A': np.array([22, 39, 58, 67, 73, 75, 79, 81, 82, 86, 89, 92, 94, 96, 98]),
        'II-B': np.array([47, 59, 70, 73, 76, 82, 84, 91, 94, 95, 95, 95, 94, 94, 95]),
        'IIb':  np.array([24, 23, 27, 28, 29, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31]),
},


'ERP-CapsNet':{
        'II-A': np.array([16, 36, 52, 57, 68, 75, 76, 83, 82, 87, 92, 94, 94, 95, 98]),
        'II-B': np.array([45, 60, 66, 73, 81, 85, 87, 90, 90, 94, 94, 94, 94, 95, 96]),
        'IIb':  np.array([24, 27, 29, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]),
},

'MsCNN-TL-ESVM':{
        'II-A': np.array([24, 38, 46, 50, 60, 70, 72, 79, 84, 86, 89, 89, 92, 94, 96]),
        'II-B': np.array([40, 59, 67, 74, 79, 84, 90, 92, 94, 97, 96, 98, 97, 97, 96]),
        'IIb':  np.array([27, 29, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]),
},

'EEGNet':{
        'II-A': np.array([23, 29, 47, 64, 65, 77, 78, 77, 83, 88, 90, 92, 95, 95, 96]),
        'II-B': np.array([39, 58, 70, 71, 81, 89, 91, 93, 94, 96, 96, 98, 97, 96, 97]),
        'IIb':  np.array([22, 28, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]),
},

'Improved EEGNet (8 xdawn filters)':{
        'II-A': np.array([19, 42, 52, 61, 67, 75, 76, 81, 85, 90, 92, 96, 99, 98, 98]),
        'II-B': np.array([44, 70, 76, 80, 83, 91, 89, 93, 95, 95, 95, 96, 96, 95, 96]),
        'IIb':  np.array([22, 27, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]),
},

'DeepConvNet':{
        'II-A': np.array([19, 31, 47, 61, 68, 76, 83, 83, 80, 88, 88, 93, 92, 95, 96]),
        'II-B': np.array([45, 67, 79, 78, 83, 90, 95, 97, 97, 98, 98, 98, 99, 99, 99]),
        'IIb':  np.array([24, 29, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]),
}


}

for model in Model_list.keys():  
    for dataset in Model_list[model].keys():
        s5  = np.round( np.mean( Model_list[model][dataset][:5] ),  1)
        s10 = np.round( np.mean( Model_list[model][dataset][:10] ), 1)
        s15 = np.round( np.mean( Model_list[model][dataset][:15] ), 1)
        print('{}, {}, {}, {}, {}'.format(model, dataset, s5, s10, s15))





